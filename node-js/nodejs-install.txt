#nvm安装nodejs

环境：centos6.5

安装nvm
wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash

安装完后关闭所有终端，重新打开一个终端，查看版本

[root@localhost ~]# nvm --version
0.31.1


安装nodejs
nvm install stable #安装最新稳定版 node，现在是 7.10.0
nvm install 4.2.2 #安装 4.2.2 版本
nvm install 0.12.7 #安装 0.12.7 版本


[root@localhost ~]# nvm install stable
Downloading https://nodejs.org/dist/v7.10.0/node-v7.10.0-linux-x64.tar.xz...
######################################################################## 100.0%
Now using node v7.10.0 (npm v4.2.0)
Creating default alias: default -> stable (-> v7.10.0)


[root@localhost ~]# node -v
v7.10.0
[root@localhost ~]# npm -v
4.2.0



*************************************************************************
Gruntjs是JavaScript项目的构建工具，也是基于node的一个命令行工具。
很多开源JS项目都是使用它搭建。如jQuery、Qunit、CanJS等。它有以下作用

· 合并JS文件

· 压缩JS文件

· 单元测试（基于QUnit）

· 一句话：完全自动化（automation）
*************************************************************************

然后安装grunt，-g参数表示全局安装，可以在任意目录使用npm命令。
[root@localhost ~]# npm install -g grunt-cli
/root/.nvm/versions/node/v7.10.0/bin/grunt -> /root/.nvm/versions/node/v7.10.0/lib/node_modules/grunt-cli/bin/grunt
/root/.nvm/versions/node/v7.10.0/lib
└─┬ grunt-cli@1.2.0 
  ├─┬ findup-sync@0.3.0 
  │ └─┬ glob@5.0.15 
  │   ├─┬ inflight@1.0.6 
  │   │ └── wrappy@1.0.2 
  │   ├── inherits@2.0.3 
  │   ├─┬ minimatch@3.0.4 
  │   │ └─┬ brace-expansion@1.1.7 
  │   │   ├── balanced-match@0.4.2 
  │   │   └── concat-map@0.0.1 
  │   ├── once@1.4.0 
  │   └── path-is-absolute@1.0.1 
  ├── grunt-known-options@1.1.0 
  ├─┬ nopt@3.0.6 
  │ └── abbrev@1.1.0 
  └── resolve@1.1.7 

[root@localhost ~]# grunt --version
grunt-cli v1.2.0

在需要使用grunt的目录创建package.json
[root@localhost deyihome-phpsource]# npm init
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
name: (deyihome-phpsource) 
version: (1.0.0) 
description: 
entry point: (index.js) 
test command: 
git repository: 
keywords: 
author: deyijia
license: (ISC) 
About to write to /home/www/deyihome-phpsource/package.json:

{
  "name": "deyihome-phpsource",
  "version": "1.0.0",
  "description": "当前版本2.0 旧版本 1.9.4",
  "main": "index.js",
  "dependencies": {
    "grunt": "^1.0.1"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "deyijia",
  "license": "ISC"
}


Is this ok? (yes) yes



进入需要使用grunt的目录，安装grunt插件
[root@localhost deyihome-phpsource]# npm install grunt --save-dev
deyihome-phpsource@1.0.0 /home/www/deyihome-phpsource
└── grunt@1.0.1 

npm WARN deyihome-phpsource@1.0.0 No repository field.



如果安装有问题，可以卸载原来的node-sass并重新安装
[root@localhost deyihome-phpsource]# cd static/v2/

[root@localhost v2]# npm uninstall --save node-sass
npm WARN jia.deyi.com@1.0.0 No repository field.
npm WARN jia.deyi.com@1.0.0 No license field.

[root@localhost v2]# npm install --save node-sass
npm WARN prefer global node-gyp@3.6.1 should be installed with -g

> node-sass@4.5.2 install /home/www/deyihome-phpsource/static/v2/node_modules/node-sass
> node scripts/install.js

Downloading binary from https://github.com/sass/node-sass/releases/download/v4.5.2/linux-x64-51_binding.node
Download complete..] - :
Binary saved to /home/www/deyihome-phpsource/static/v2/node_modules/node-sass/vendor/linux-x64-51/binding.node
Caching binary to /root/.npm/node-sass/4.5.2/linux-x64-51_binding.node

> node-sass@4.5.2 postinstall /home/www/deyihome-phpsource/static/v2/node_modules/node-sass
> node scripts/build.js

Binary found at /home/www/deyihome-phpsource/static/v2/node_modules/node-sass/vendor/linux-x64-51/binding.node
Testing binary
Binary is fine
jia.deyi.com@1.0.0 /home/www/deyihome-phpsource/static/v2
└─┬ node-sass@4.5.2 
  ├── async-foreach@0.1.3 
  ├─┬ chalk@1.1.3 
  │ ├── ansi-styles@2.2.1 
  │ ├── escape-string-regexp@1.0.5 
  │ ├─┬ has-ansi@2.0.0 
  │ │ └── ansi-regex@2.1.1 
  │ ├── strip-ansi@3.0.1 
  │ └── supports-color@2.0.0 
  ├─┬ cross-spawn@3.0.1 
  │ ├─┬ lru-cache@4.0.2 
  │ │ ├── pseudomap@1.0.2 
  │ │ └── yallist@2.1.2 
  │ └─┬ which@1.2.14 
  │   └── isexe@2.0.0 
  ├─┬ gaze@1.1.2 
  │ └── globule@1.1.0 
  ├── get-stdin@4.0.1 
  ├─┬ glob@7.1.1 
  │ ├── fs.realpath@1.0.0 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ ├── inherits@2.0.3 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.7 
  │ │   ├── balanced-match@0.4.2 
  │ │   └── concat-map@0.0.1 
  │ ├── once@1.4.0 
  │ └── path-is-absolute@1.0.1 
  ├── in-publish@2.0.0 
  ├── lodash.assign@4.2.0 
  ├── lodash.clonedeep@4.5.0 
  ├── lodash.mergewith@4.6.0 
  ├─┬ meow@3.7.0 
  │ ├─┬ camelcase-keys@2.1.0 
  │ │ └── camelcase@2.1.1 
  │ ├── decamelize@1.2.0 
  │ ├─┬ loud-rejection@1.6.0 
  │ │ ├─┬ currently-unhandled@0.4.1 
  │ │ │ └── array-find-index@1.0.2 
  │ │ └── signal-exit@3.0.2 
  │ ├── map-obj@1.0.1 
  │ ├── minimist@1.2.0 
  │ ├─┬ normalize-package-data@2.3.8 
  │ │ ├── hosted-git-info@2.4.2 
  │ │ ├─┬ is-builtin-module@1.0.0 
  │ │ │ └── builtin-modules@1.1.1 
  │ │ └─┬ validate-npm-package-license@3.0.1 
  │ │   ├─┬ spdx-correct@1.0.2 
  │ │   │ └── spdx-license-ids@1.2.2 
  │ │   └── spdx-expression-parse@1.0.4 
  │ ├── object-assign@4.1.1 
  │ ├─┬ read-pkg-up@1.0.1 
  │ │ ├─┬ find-up@1.1.2 
  │ │ │ ├── path-exists@2.1.0 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ └─┬ read-pkg@1.1.0 
  │ │   ├─┬ load-json-file@1.1.0 
  │ │   │ ├─┬ parse-json@2.2.0 
  │ │   │ │ └─┬ error-ex@1.3.1 
  │ │   │ │   └── is-arrayish@0.2.1 
  │ │   │ ├── pify@2.3.0 
  │ │   │ └─┬ strip-bom@2.0.0 
  │ │   │   └── is-utf8@0.2.1 
  │ │   └── path-type@1.1.0 
  │ ├─┬ redent@1.0.0 
  │ │ ├─┬ indent-string@2.1.0 
  │ │ │ └─┬ repeating@2.0.1 
  │ │ │   └── is-finite@1.0.2 
  │ │ └── strip-indent@1.0.1 
  │ └── trim-newlines@1.0.0 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├── nan@2.6.2 
  ├─┬ node-gyp@3.6.1 
  │ ├── fstream@1.0.11 
  │ ├── graceful-fs@4.1.11 
  │ ├─┬ nopt@3.0.6 
  │ │ └── abbrev@1.1.0 
  │ ├─┬ osenv@0.1.4 
  │ │ ├── os-homedir@1.0.2 
  │ │ └── os-tmpdir@1.0.2 
  │ ├── rimraf@2.6.1 
  │ ├── semver@5.3.0 
  │ └─┬ tar@2.2.1 
  │   └── block-stream@0.0.9 
  ├─┬ npmlog@4.1.0 
  │ ├─┬ are-we-there-yet@1.1.4 
  │ │ └── delegates@1.0.0 
  │ ├── console-control-strings@1.1.0 
  │ ├─┬ gauge@2.7.4 
  │ │ ├── aproba@1.1.1 
  │ │ ├── has-unicode@2.0.1 
  │ │ ├─┬ string-width@1.0.2 
  │ │ │ ├── code-point-at@1.1.0 
  │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │   └── number-is-nan@1.0.1 
  │ │ └── wide-align@1.1.0 
  │ └── set-blocking@2.0.0 
  ├─┬ request@2.81.0 
  │ ├── aws-sign2@0.6.0 
  │ ├── aws4@1.6.0 
  │ ├── caseless@0.12.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@3.0.1 
  │ ├── forever-agent@0.6.1 
  │ ├─┬ form-data@2.1.4 
  │ │ └── asynckit@0.4.0 
  │ ├─┬ har-validator@4.2.1 
  │ │ ├─┬ ajv@4.11.8 
  │ │ │ ├── co@4.6.0 
  │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │   └── jsonify@0.0.0 
  │ │ └── har-schema@1.0.5 
  │ ├─┬ hawk@3.1.3 
  │ │ ├── boom@2.10.1 
  │ │ ├── cryptiles@2.0.5 
  │ │ ├── hoek@2.16.3 
  │ │ └── sntp@1.0.9 
  │ ├─┬ http-signature@1.1.1 
  │ │ ├── assert-plus@0.2.0 
  │ │ ├─┬ jsprim@1.4.0 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├── extsprintf@1.0.2 
  │ │ │ ├── json-schema@0.2.3 
  │ │ │ └── verror@1.3.6 
  │ │ └─┬ sshpk@1.13.0 
  │ │   ├── asn1@0.2.3 
  │ │   ├── assert-plus@1.0.0 
  │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │   ├─┬ dashdash@1.14.1 
  │ │   │ └── assert-plus@1.0.0 
  │ │   ├── ecc-jsbn@0.1.1 
  │ │   ├─┬ getpass@0.1.7 
  │ │   │ └── assert-plus@1.0.0 
  │ │   ├── jodid25519@1.0.2 
  │ │   ├── jsbn@0.1.1 
  │ │   └── tweetnacl@0.14.5 
  │ ├── is-typedarray@1.0.0 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├─┬ mime-types@2.1.15 
  │ │ └── mime-db@1.27.0 
  │ ├── oauth-sign@0.8.2 
  │ ├── performance-now@0.2.0 
  │ ├── qs@6.4.0 
  │ ├── safe-buffer@5.0.1 
  │ ├── stringstream@0.0.5 
  │ ├─┬ tough-cookie@2.3.2 
  │ │ └── punycode@1.4.1 
  │ ├── tunnel-agent@0.6.0 
  │ └── uuid@3.0.1 
  ├─┬ sass-graph@2.2.2 
  │ ├── lodash@4.16.6 
  │ ├─┬ scss-tokenizer@0.2.1 
  │ │ ├── js-base64@2.1.9 
  │ │ └─┬ source-map@0.4.4 
  │ │   └── amdefine@1.0.1 
  │ └─┬ yargs@6.6.0 
  │   ├── camelcase@3.0.0 
  │   ├─┬ cliui@3.2.0 
  │   │ └── wrap-ansi@2.1.0 
  │   ├── get-caller-file@1.0.2 
  │   ├─┬ os-locale@1.4.0 
  │   │ └─┬ lcid@1.0.0 
  │   │   └── invert-kv@1.0.0 
  │   ├── require-directory@2.1.1 
  │   ├── require-main-filename@1.0.1 
  │   ├── which-module@1.0.0 
  │   ├── y18n@3.2.1 
  │   └─┬ yargs-parser@4.2.1 
  │     └── camelcase@3.0.0 
  └─┬ stdout-stream@1.4.0 
    └─┬ readable-stream@2.2.9 
      ├── buffer-shims@1.0.0 
      ├── core-util-is@1.0.2 
      ├── isarray@1.0.0 
      ├── process-nextick-args@1.0.7 
      ├── string_decoder@1.0.0 
      └── util-deprecate@1.0.2 

npm WARN jia.deyi.com@1.0.0 No repository field.
npm WARN jia.deyi.com@1.0.0 No license field.


如果提示错误本地插件没有安装
可用如下命令安装，其中grunt-svgmin是插件名，可替换为其他插件名
[root@localhost v2]# npm install grunt-svgmin --save-dev


如果提示下面错误
[root@localhost deyihome-phpsource]# ./hacking/sass-build.sh 
+ cd static/v2
+ npm install
npm WARN jia.deyi.com@1.0.0 No repository field.
+ grunt all
Loading "build.js" tasks...ERROR
>> Error: Cannot find module 'requirejs'
Warning: Task "build" not found. Use --force to continue.

Aborted due to warnings.

需要安装requirejs
[root@localhost v2]# npm install requirejs
jia.deyi.com@1.0.0 /home/www/deyihome-phpsource/static/v2
└── requirejs@2.3.3 

npm WARN jia.deyi.com@1.0.0 No repository field.




测试，在需要的目录运行grunt all，下面表示运行成功
Running "sass:ui" (sass) task

Running "build:ui" (build) task
>> File "source/js/ui.js" created.

Running "uglify:ui" (uglify) task
>> 1 sourcemap created.
>> 1 file created 100.17 kB → 35.31 kB

Running "uglify:scripts" (uglify) task
>> 1 file created 202.03 kB → 47.94 kB

Done.

